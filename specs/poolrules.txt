
Comdb2 Ruleset-Based Task Pools

Rule -- An expression, that when applied to the contextual criteria, produces
        exactly one of the following results:

        1. Nothing (NO-OP) -AND- cause subsequent rules to be run.

        2. Nothing (NO-OP) -AND- cause subsequent rules to be skipped.  This
           will typically cause the default task pool to be used.

        2. A relative priority -AND- cause subsequent rules to be skipped.

        3. A relative priority -AND- cause subsequent rules to be run, which
           may modify or override the assigned relative priority.

        4. A relative priority increment -AND- cause subsequent rules to be
           skipped.

        5. A relative priority increment -AND- cause subsequent rules to be
           run, which may modify or override the assigned relative priority.

        6. A relative priority decrement -AND- cause subsequent rules to be
           skipped.

        7. A relative priority decrement -AND- cause subsequent rules to be
           run, which may modify or override the assigned relative priority.

        8. A reserved relative priority value indicating that the SQL query
           should be rejected -AND- cause subsequent rules to be run, which
           may modify or override the assigned relative priority.

        9. A reserved relative priority value indicating that the SQL query
           should be rejected -AND- cause subsequent rules to be skipped.

        Initially, the relative priority will be assigned the value of zero.
        The valid range of relative priorities shall be -127 to 127.  Each
        task pool will be assigned exactly one non-overlapping range of
        relative priorities to be responsible for.  If, at the end of ruleset
        processing, the relative priority is (still) zero, the default task
        pool will be selected.  The value -128 shall be reserved to indicate
        that the SQL query was rejected.  If the resulting relative priority
        does not fit into a range associated with a task pool, the result is
        not officially defined and is subject to change; however, the typical
        behavior will be to use the default task pool.

Ruleset -- A sequence of zero or more rules, evaluated in order, which produce
           a result consisting of a relative priority to assign to a given SQL
           query, based on various contextual criteria.

Task Pool -- A logical grouping of SQL queries corresponding to a particular
             relative priority.  Internally, this will be modeled as a thread
             pool, making use of the existing component(s) designed for this
             purpose.  There is always at least one such thread pool, which is
             used as the "default" task pool.  Additional thread pools will be
             created and configured on-demand via the management interface.  A
             given thread pool, other than the "default", will always have an
             associated minimum/maximum number of threads and a relative
             priority.  In the future, other parameters may be maintained on a
             per-thread pool basis (e.g. stack size, heap limit, etc).  The
             thread pool configuration will support persistence; however, it is
             necessary to support transient thread pools (on-demand) as well.

Criteria -- The nature of the SQL query (e.g. as determined by glob patterns,
            regular expressions, etc).  Also, the originating user, machine,
            or task.

Management Interface -- A set of custom SQL functions with the "comdb2_" prefix
                        used to create, configure, and introspect configured
                        ruleset and task pools.  The following set of logical
                        operations will be supported:

         CREATE_POOL - Create a new task pool using with a default
                       configuration.  This will fail if the system
                       is out of a needed resource, or the caller
                       does not have the necessary permission.  Upon
                       creation, a task pool is stopped.  Minimally,
                       a descriptive name and the relative priority
                       range should be specified.

        PERSIST_POOL - Make this task pool persistent.  This will
                       fail if the specified task pool does not
                       exist, is already persistent, or the caller
                       does not have the necessary permission.

      UNPERSIST_POOL - Make this task pool transient.  This will
                       fail if the specified task pool does not
                       exist, is already transient, or the caller
                       does not have the necessary permission.

           LIST_POOL - Returns a list of task pools with their
                       associated metadata.  This will fail if the
                       caller does not have the necessary permission.

           LIST_RULE - Returns the list of rules.  This will fail
                       if the caller does not have the necessary
                       permission.  If, at any time, there are no
                       rules, all SQL queries will be assigned to
                       the default task pool.

          CLEAR_RULE - Clear the list of rules.  This has no effect
                       on rules previously saved.  This will fail
                       if the caller does not have the necessary
                       permission.

         CREATE_RULE - Add a rule at the end of the logical list.
                       This will fail if the caller does not have
                       the necessary permission.  The new rule is
                       transient until saved.  Minimally, the new
                       rule must include an expression and should
                       include a name.

           SAVE_RULE - Save the list of rules.  This will fail
                       if the caller does not have the necessary
                       permission.  This is potentially a lossy
                       operation because it will overwrite the
                       previously saved rules, if any.

          START_POOL - Start an existing task pool.  This will fail
                       if the specified task pool does not exist,
                       the system is out of a needed resource, or the
                       caller does not have the necessary permission.

           STOP_POOL - Stop an existing task pool.  Persistent task
                       pools will still be restarted next time the
                       server is started or restarted.  This will fail
                       if the specified task pool does not exist or
                       the caller does not have the necessary permission.

      CONFIGURE_POOL - Configure an existing task pool.  This
                       will fail if the specified task pool does
                       not exist, the system is out of a needed
                       resource, the caller does not have the
                       necessary permission, or the specified
                       relative priority range overlaps with
                       another task pool.  The parameters to be
                       configured may include minimum task count,
                       maximum task count, and relative priority
                       range.
